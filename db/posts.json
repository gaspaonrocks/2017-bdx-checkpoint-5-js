{"_id":{"$oid":"5965d5f23da2cd18c91b1d25"},"updatedAt":{"$date":"2017-07-12T14:36:14.885Z"},"createdAt":{"$date":"2017-07-12T07:55:30.248Z"},"title":"Exercice 1","content":"First.\n\nusername : Sacha\nmail : shredding.fingers\nmdp: checkpoint\n\nSecond.\nUn fork GitHub est une manière de récupérer un projet en l'état d'une autre personne avec ses branches et de le copier dans notre dépôt Github. C'est une façon de procéder lorsque qu'on veut s'approprier un projet et qu'on souhaite le modifier à notre façon.\n\nUne pull request intervient lorsqu'on veut intégrer nos apports au projet principal. On notifie le contributeur principal qui vérifie les changements apportés et valide ou non la pull request.\n\nUne branche est un 'mini-fork' c'est un espace de travail virtuel dans lequel une seul fonctionnalité est étudiée et testée. Chaque branche correspond à une fonctionnalité. Cela est utile pour ne pas compromettre la branche principale qui est fonctionnelle. Une fois la branche de travail testée et éprouvée, on la fusionne avec la branche principale.\n\nLe fork se sépare d'un projet entier pour prendre une autre direction. Une branche se fait au sein du même projet pour ajouter une fonctionnalité.","__v":0,"date":{"$date":"2017-07-12T07:55:30.248Z"},"published":false}
{"_id":{"$oid":"5965dde03da2cd18c91b1d26"},"updatedAt":{"$date":"2017-07-12T13:35:12.493Z"},"createdAt":{"$date":"2017-07-12T08:29:20.133Z"},"title":"La MEAN Stack","content":"Technologies du projet : \n\nAngular [front] (*INDISPENSABLE*) : il s'agit du framework de gestion de l'affichage côté client. C'est le premier module externe à être appelé côté front et tout le reste s'articule autour. Permet le développement de site en une seule page. Tout est chargé au départ et les vues se rafraichissent au cours de la navigation. Se base sur l'architecture Model-View-Controller. \n\nAngular UI Router [front] (*IMPORTANTE*) : module permettant le routage, l'association entre les composants (fichiers *.js), les vues ( fichiers *.html). Il permet aussi de communiquer avec les services avant l'affichage des vues.\n\nExpress [back] (*IMPORTANTE*) :  middleware de routage côté back, permet d'associer adresses envoyées par le navigateur et contrôleurs côté serveur. \n\nJSONWebToken [front \u0026 back] (facultative) : permet d'encrypter les données envoyées par requêtes, notamment dans le remplissage de formulaires d'identification.\n\nMongoose [back] (*IMPORTANTE*) : middleware de gestion de schema de base de données MongoDB. Permet de limiter les champs des objets enregistrés dans la base de données afin d'avoir une certaine rigueur et permettre des opérations qui n'étaient possibles que sur des base de données relationnelles.\n\nMaterializeCSS  [front] (facultative) : permet d'avoir de jolis effets de style à l'affichage du site. N'est pas destructeur de l'application mais le site ne ressemblera plus à grand chose. Peut potentiellement empêcher l'affichage de certaines parties du DOM si 'undefined'.\n\nPassport [back] (facultative) : permet l'identification par le biais d'autres clients comme OAuth, Facebook, Twitter, etc... \n\nBabel [terminale] (importante) : permet de transpiler le code. Certains outils de déploiement ne sont pas à jour au niveau des nomenclatures ECMAScript. Babel permet de convertir le langage moderne, en langage plus ancien. L'exemple le plus flagrant étant la fonction flèche () =\u003e {}.\n\nSCSS [front] (facultative) : préprocesseur de feuillets de style. Ajoute de jolies fonctionnalités mais doit être interprété et n'est pas du tout indispensable.\n\nNodemon [terminal] (facultative) : surcouche de Node. Si node est indispensable, nodemon ne l'est pas. Il permet juste d'être à l'écoute des changements de fichiers et de relancer le serveur automatiquement.\n\nWebpack [terminal] (très utile) : outil de déploiement continu. Permet de mettre l'application en production en gérant tous les outils mentionnés et bien plus encore. C'est le chef d'orchestre.\n\nLivereload [terminal] (utile mais bon... on peut faire sans) : permet de lancer une application côté client (seulement le front) et comme nodemon permet de rafraichir la page dès qu'il y a changement de fichiers.\n\n\nLA MEAN STACK : architecture  de travail utilisant MongoDB, Express, Angular et NodeJs. Tout en JavaScript, car JS c'est la vie. Il s'agit d'un ensemble d'outils opensource permettant le développement d'applications web dynamiques end-to-end, depuis le front jusqu'au back.","__v":0,"date":{"$date":"2017-07-11T22:00:00.000Z"},"published":true}
{"_id":{"$oid":"596632ce7bed4d7958f90043"},"updatedAt":{"$date":"2017-07-12T14:31:42.873Z"},"createdAt":{"$date":"2017-07-12T14:31:42.873Z"},"title":"Test publication TRUE","content":"Lorem Ipsum","date":{"$date":"2017-07-12T22:00:00.000Z"},"published":true,"__v":0}
{"_id":{"$oid":"59663ed1de97af02fa4a295e"},"updatedAt":{"$date":"2017-07-12T15:22:57.733Z"},"createdAt":{"$date":"2017-07-12T15:22:57.733Z"},"title":"Les méthodes agiles","content":"Question : Que sont les méthodes agiles ?\nRéponse : c'est un ensemble de méthodes pour diriger un projet. On les dit agiles car elles permettent une grande flexibilité dans le travail et une meilleure adaptabilité aux différents évènements.\n \nQuestion : Qu’est-ce que SCRUM ? \nRéponse : SCRUM est une de ces méthodes agiles. Cela vient de la mêlée au rugby. C'est une méthode ou tous les jours est redéfinie le plan de travail en fonction de l'évolution du projet. \n\nQuestion : Définir le Product BackLog, de quoi est-il constitué ? \nRéponse : c'est la liste de tout ce qui doit être fait pour que le produit soit fini tout en respectant les notes de cadrages définies au départ du projet. C'est l'ensemble des fonctionnalités du produit.\n\nQuestion : Définir le Product Owner\nRéponse : le product owner est le propriétaire du produit fini. C'est lui qui définit le product backlog en fonction de ses désirs. Tout le projet s'articule autour des priorités qu'il fixe.\n\nQuestion : Définir le SCRUM Master\nRéponse : c'est le chef d'orchestre de l'équipe travaillant sur le projet. Il reparti les tâches en fonction des capacités de chacun, il définit les priorités sur les sprints et organise les daily scrum meetings, les réunions quotidiennes.\n\nQuestion : Définir la « Development team »\nRéponse : l'équipe de développement, les ressources humaines qui apportent la capacité de travail. Il peut y avoir des spécialistes ou non de domaines divers et variés en fonction du projet.\n\nQuestion : Définir le Sprint, de quoi est-il constitué ? \nRéponse : un sprint est une unité de mesure du travail, c'est le travail effectué par une personne en une journée. Rarement respectée cela sert néanmoins à donner une estimation du temps total de développement, et du coût que cela représente.\n\nQuestion : Définir le daily scrum\nRéponse : Mêlée quotidienne où l'équipe se réunit et parle de ce qui a été fait la veille et de ce qui sera fait le jour même. C'est le scrum master qui dirige cette réunion.\n\nQuestion : Qu’est-ce que la planification d’un sprint ? \nRéponse : c'est le découpage d'une fonctionnalité voulue en tâche qui prendra une journée pour une personne.\n\nQuestion : Qu’est-ce que la révision d’un sprint ?\nRéponse : cela arrive lorsque une fonctionnalité se montre récalcitrante ou lorsqu'un imprévu arrive. On redécoupe les tâches qu'on redistribue à l'équipe toujours en fonction des priorités du projet.\n\nQuestion : Qu’est-ce que la rétrospective d’un sprint ? \nRéponse : peut être faite à la fin d'une journée ou de la semaine, ou encore lors du daily scrum meeting du lendemain. On parle des difficultés rencontrées lors du sprint ou des ajouts à faire. Peut entraîner une révision d'un sprint ou un changement dans l'approche d'un prochain sprint.\n\nQuestion : Pourquoi est-il important de définir la notion de « Done » pour les tâches ?\nRéponse : cela permet de situer le projet, de savoir si une fonctionnalité est terminée. Cela permet aussi d'avancer si un autre dépendait de celui qui vient de passer en DONE.\n\nQuestion : La notion de « Done » peut-elle évoluer au cours d’un projet SCRUM ? \nRéponse : cela peut évoluer étant donné que des évolutions peuvent survenir au cours du projet. On peut repasser en In Progress puis revenir à DONE ! (oui je mets ALL CAPS à DONE, car c'est important)\n\nQuestion : SCRUM est-elle une méthodologie itérative ? Justifier.\nRéponse : Oui !! En effet chaque jour apporte son lot de surprises. Plus sérieusement, tout est fait par petit pas. Une chose à la fois pour ne pas s'embourber dans des tâches trop grandes.","date":{"$date":"2017-07-11T22:00:00.000Z"},"published":true,"__v":0}
